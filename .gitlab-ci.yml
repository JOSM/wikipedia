image: registry.gitlab.com/josm/docker-library/openjdk-8-josmplugin:latest

before_script:
- export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches


###############
# Build stage #
###############

assemble:
  stage: build
  script:
  - ./gradlew assemble --stacktrace
  artifacts:
    paths:
    - build/

assemble with java 10:
  stage: build
  image: registry.gitlab.com/josm/docker-library/openjdk-10-josmplugin:latest
  script:
  - ./gradlew assemble --stacktrace
  artifacts:
    paths:
    - build/

assemble with java 11:
  stage: build
  image: registry.gitlab.com/josm/docker-library/openjdk-11-josmplugin:latest
  script:
    - ./gradlew assemble --stacktrace
  artifacts:
    paths:
      - build/

assemble with java 12:
  stage: build
  image: registry.gitlab.com/josm/docker-library/openjdk-12-josmplugin:latest
  script:
    - ./gradlew assemble --stacktrace
  artifacts:
    paths:
      - build/
  allow_failure: true

assemble with java 13:
  stage: build
  image: registry.gitlab.com/josm/docker-library/openjdk-13-josmplugin:latest
  script:
    - ./gradlew assemble --stacktrace
  artifacts:
    paths:
      - build/
  allow_failure: true


##############
# Test stage #
##############

build:
  stage: test
  script:
  - ./gradlew build generatePot generateSnapshotUpdateSite --stacktrace
  artifacts:
    paths:
    - build
  dependencies:
  - assemble

compile against min JOSM:
  stage: test
  script:
  - ./gradlew compileJava_minJosm
  dependencies:
  - assemble

compile against latest JOSM:
  stage: test
  script:
  - ./gradlew compileJava_latestJosm
  dependencies:
  - assemble

build with java 10:
  stage: test
  image: registry.gitlab.com/josm/docker-library/openjdk-10-josmplugin:latest
  script:
  - ./gradlew build --stacktrace
  dependencies:
  - assemble with java 10

build with java 11:
  stage: test
  image: registry.gitlab.com/josm/docker-library/openjdk-11-josmplugin:latest
  script:
    - ./gradlew build --stacktrace
  dependencies:
    - assemble with java 11

build with java 12:
  stage: test
  image: registry.gitlab.com/josm/docker-library/openjdk-12-josmplugin:latest
  script:
    - ./gradlew build --stacktrace
  dependencies:
    - assemble with java 12
  allow_failure: true

build with java 13:
  stage: test
  image: registry.gitlab.com/josm/docker-library/openjdk-13-josmplugin:latest
  script:
    - ./gradlew build --stacktrace
  dependencies:
    - assemble with java 13
  allow_failure: true


################
# Deploy stage #
################

upload to transifex:
  image: python:3.6-stretch
  stage: deploy
  environment:
    name: transifex
    url: https://www.transifex.com/josm/josm/josm-plugin_wikipedia/
  before_script:
  - apt-get update && apt-get install -yq gettext git
  - pip install git+https://github.com/transifex/transifex-client.git
  script:
  - TX_TOKEN="$TRANSIFEX_TOKEN" tx push -s --no-interactive
  dependencies:
  - build
  only:
  - master@JOSM/wikipedia

release:
  stage: deploy
  environment:
    name: pages branch / dist directory
    url: https://gitlab.com/JOSM/wikipedia/tree/pages/dist
  script:
  - &clone_pages_branch |
    echo "$SSH_PRIVATE_DEPLOY_KEY" > ~/.ssh/id_rsa
    chmod 600 ~/.ssh/id_rsa
    git clone --depth 1 --branch pages git@gitlab.com:JOSM/wikipedia.git pages
  - |
    version=`git describe --always --dirty`
    longVersion=`git describe --always --long --dirty`
    commitMessage="Release version $longVersion"
  - |
    mkdir -pv "pages/dist/$version"
    cp -v build/dist/* build/tmp/jar/MANIFEST.MF "pages/dist/$version"
    rm -fv "pages/dist/latest"
    ln -s "./$version" "pages/dist/latest"
  - &push_pages_branch |
    cd pages/
    git config user.name "Deploy with GitLab CI"
    git config user.email "JOSM/wikipedia@gitlab.com"
    git stage .
    git commit -a -m "$commitMessage"
    git push origin pages
  dependencies:
  - build
  only:
  - tags@JOSM/wikipedia

publish master update site:
  stage: deploy
  environment:
    name: pages branch / snapshot update site
    url: https://gitlab.com/JOSM/wikipedia/tree/pages
  script:
  - *clone_pages_branch
  - |
    commitHash=`git rev-parse HEAD`
    commitMessage="Make latest commit from master available via JOSM update site ($commitHash)"
  - |
    rm -vrf pages/snapshot/master
    mkdir -pv pages/snapshot/master
    cp -v build/snapshot-update-site pages/snapshot/master/update-site
    cp -v build/dist/* pages/snapshot/master
  - *push_pages_branch
  dependencies:
  - build
  only:
  - master@JOSM/wikipedia

publish to / GitLab.com packages:
  stage: deploy
  environment:
    name: GitLab.com / JOSM-wikipedia packages
    url: https://gitlab.com/JOSM/wikipedia/-/packages
  script:
  - ./gradlew publishPluginPublicationToGitlabRepository
  dependencies:
  - build
  only:
  - tags@JOSM/wikipedia
