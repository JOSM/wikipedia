images:
  jdk8: &jdk8_image
    - image: circleci/openjdk:8-jdk-node-browsers
  jdk9: &jdk9_image
    - image: circleci/openjdk:9-jdk-node-browsers

version: 2
jobs:
  assemble-java-9:
    docker: *jdk9_image
    steps:
      - checkout
      # Main commands
      - run: ./gradlew assemble
      # Persist build artifacts
      - run: mv -fT build /tmp/jdk9-build-artifacts
      - persist_to_workspace:
          root: /tmp/
          paths: jdk9-build-artifacts
  test-java-9:
    docker: *jdk9_image
    steps:
      - checkout
      # Attach build artifacts
      - attach_workspace:
          at: /tmp/
      - run: mv -fT /tmp/jdk9-build-artifacts build
      # Main commands
      - run: ./gradlew test

  assemble-java-8:
    docker: *jdk8_image
    steps:
      - checkout
      - run: sudo apt install -y gettext
      # Main commands
      - run: ./gradlew assemble generatePot
      # Persist build artifacts
      - persist_to_workspace:
          root: .
          paths: build
  test-java-8:
    docker: *jdk8_image
    steps:
      - checkout
      # Attach build artifacts
      - attach_workspace:
          at: .
      # Main commands
      - run: ./gradlew test
      # Persist build artifacts
      - persist_to_workspace:
          root: .
          paths:
            - .tx
            - build

  min-josm:
    docker: *jdk8_image
    steps:
      - checkout
      # Attach build artifacts
      - attach_workspace:
          at: .
      # Main commands
      - run: ./gradlew minJosmVersionClasses

  check:
    docker: *jdk8_image
    steps:
      - checkout
      # Attach build artifacts
      - attach_workspace:
          at: .
      # Main commands
      - run: ./gradlew check

  transifex-upload:
    docker:
      - image: circleci/python:3.6-node-browsers
    steps:
      - attach_workspace:
          at: .
      - run: pip install --user git+https://github.com/transifex/transifex-client.git@699dd42e04074be92a07b5b87e8f1ea672a6571f#egg=transifex-client
      - run: |
          export PATH="$PATH:$HOME/.local/bin" && echo "$PATH"
          if [ ! -z "$TRANSIFEX_TOKEN" ]; then
            TX_TOKEN="$TRANSIFEX_TOKEN" tx push -s --no-interactive
          fi

workflows:
  version: 2
  build-workflow:
    jobs:
      - assemble-java-8
      - test-java-8:
          requires:
            - assemble-java-8

      - assemble-java-9
      - test-java-9:
          requires:
            - assemble-java-9

      - check:
          requires:
            - test-java-8
            - test-java-9
      - min-josm:
          requires:
            - test-java-8
            - test-java-9

      - transifex-upload:
          requires:
            - check
            - min-josm
          filters:
            branches:
              only: master
